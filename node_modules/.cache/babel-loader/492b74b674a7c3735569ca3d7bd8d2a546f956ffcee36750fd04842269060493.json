{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\astro\\\\Documents\\\\youtube-clone\\\\src\\\\components\\\\SearchFeedComp.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport { VideosComp } from \"./\";\nimport { fetchFromAPI } from \"../utils/fetchFromAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchFeedComp = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const {\n    searchTerm\n  } = useParams();\n  useEffect(() => {\n    fetchFromAPI(`search?part=snippet&q=${searchTerm}`).then(data => setVideos(data.items));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    sx: {\n      overflowY: 'auto',\n      height: '90vh',\n      flex: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      mb: 2,\n      sx: {\n        color: 'white'\n      },\n      children: [\"Search results for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#f31503'\n        },\n        children: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }, this), \" videos.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mr: {\n            sm: '100px'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchFeedComp, \"UEVXhWOkkrLieALXf6eNdGg1aEE=\", false, function () {\n  return [useParams];\n});\n_c = SearchFeedComp;\nexport default SearchFeedComp;\nvar _c;\n$RefreshReg$(_c, \"SearchFeedComp\");","map":{"version":3,"names":["useState","useEffect","Box","Typography","useParams","VideosComp","fetchFromAPI","jsxDEV","_jsxDEV","SearchFeedComp","_s","videos","setVideos","searchTerm","then","data","items","p","sx","overflowY","height","flex","children","variant","fontWeight","mb","color","style","fileName","_jsxFileName","lineNumber","columnNumber","display","mr","sm","Videos","_c","$RefreshReg$"],"sources":["C:/Users/astro/Documents/youtube-clone/src/components/SearchFeedComp.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport {VideosComp} from \"./\";\r\nimport { fetchFromAPI } from \"../utils/fetchFromAPI\";\r\n\r\nconst SearchFeedComp = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const { searchTerm } = useParams()\r\n\r\n  useEffect(() => {\r\n    fetchFromAPI(`search?part=snippet&q=${searchTerm}`)\r\n      .then((data) => setVideos(data.items))\r\n    }, []);\r\n\r\n  return (\r\n    <Box\r\n        p={2}\r\n        sx={{\r\n          overflowY: 'auto',\r\n          height: '90vh',\r\n          flex: 2\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          fontWeight=\"bold\"\r\n          mb={2}\r\n          sx={{ color: 'white' }}\r\n        >\r\n          Search results for: <span style={{ color: '#f31503' }}>{searchTerm}</span> videos.\r\n        </Typography>\r\n        <Box display=\"flex\">\r\n          <Box sx={{ mr: { sm: '100px' } }}/>\r\n          {<Videos videos={videos} />}\r\n      </Box>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default SearchFeedComp"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAAQC,UAAU,QAAO,IAAI;AAC7B,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEa;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC;EAElCH,SAAS,CAAC,MAAM;IACdK,YAAY,CAAE,yBAAwBO,UAAW,EAAC,CAAC,CAChDC,IAAI,CAAEC,IAAI,IAAKH,SAAS,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAER,oBACER,OAAA,CAACN,GAAG;IACAe,CAAC,EAAE,CAAE;IACLC,EAAE,EAAE;MACFC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;IACR,CAAE;IAAAC,QAAA,gBAEFd,OAAA,CAACL,UAAU;MACToB,OAAO,EAAC,IAAI;MACZC,UAAU,EAAC,MAAM;MACjBC,EAAE,EAAE,CAAE;MACNP,EAAE,EAAE;QAAEQ,KAAK,EAAE;MAAQ,CAAE;MAAAJ,QAAA,GACxB,sBACqB,eAAAd,OAAA;QAAMmB,KAAK,EAAE;UAAED,KAAK,EAAE;QAAU,CAAE;QAAAJ,QAAA,EAAET;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,YAC5E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvB,OAAA,CAACN,GAAG;MAAC8B,OAAO,EAAC,MAAM;MAAAV,QAAA,gBACjBd,OAAA,CAACN,GAAG;QAACgB,EAAE,EAAE;UAAEe,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAQ;QAAE;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClCvB,OAAA,CAAC2B,MAAM;QAACxB,MAAM,EAAEA;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAAArB,EAAA,CAhCKD,cAAc;EAAA,QAEKL,SAAS;AAAA;AAAAgC,EAAA,GAF5B3B,cAAc;AAkCpB,eAAeA,cAAc;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}